-- Authors: Alexander Ohrt, Martin Olderskog, Jim Totland - DB1.

-- Three top lines added in order to make our testing a bit more effective. 
DROP DATABASE DB1Project;
CREATE SCHEMA DB1Project;
USE DB1Project;

CREATE TABLE User(
    UserID INT, 
    Fname VARCHAR(30),
    Sname VARCHAR(30),
    Email VARCHAR(50), 
    UserPassword VARCHAR(50), 
    UserType VARCHAR(10), 
    CONSTRAINT User_PK PRIMARY KEY (UserID)
);

CREATE TABLE ActiveOnDate(
    UserID INT, 
    Dated DATE, 
    CONSTRAINT ActiveOnDate_PK PRIMARY KEY (UserID, Dated), 
    CONSTRAINT ActiveOnDate_FK_User FOREIGN KEY (UserID) 
        REFERENCES User(UserID)
            ON DELETE CASCADE
            ON UPDATE CASCADE
);

CREATE TABLE Course(
    CourseID CHAR(7), 
    Name VARCHAR(30), 
    Term VARCHAR(6),
    AllowAnonymous BOOL, 
    CONSTRAINT Course_PK PRIMARY KEY (CourseID)
);

CREATE TABLE Folder(
    FolderID INT AUTO_INCREMENT, 
    Name VARCHAR(30), 
    SuperFolder INT, 
    CONSTRAINT Folder_PK PRIMARY KEY (FolderID), 
    CONSTRAINT Folder_FK_Super FOREIGN KEY (SuperFolder) 
        REFERENCES Folder(FolderID)
            ON DELETE CASCADE 
            ON UPDATE CASCADE
);

CREATE TABLE Post(
    PostID INT AUTO_INCREMENT,
    Text VARCHAR(500),
    Summary VARCHAR(50), 
    ColorCode VARCHAR(10), 
    Tag VARCHAR(20), 
    FolderID INT NOT NULL, 
    UserID INT NOT NULL,
    CONSTRAINT Post_PK PRIMARY KEY (PostID),
    CONSTRAINT Post_FK_Folder FOREIGN KEY (FolderID) 
        REFERENCES Folder(FolderID)
            ON DELETE CASCADE 
            ON UPDATE CASCADE,
    CONSTRAINT Post_FK_User FOREIGN KEY (UserID) 
        REFERENCES User(UserID)
            ON DELETE CASCADE
            ON UPDATE CASCADE
);

CREATE TABLE Followup(
    PostID INT,  
    FollowupID INT, 
    Text VARCHAR(500), 
    UserID INT NOT NULL, 
    CONSTRAINT Followup_PK PRIMARY KEY (PostID, FollowupID),
    CONSTRAINT Followup_FK_Post FOREIGN KEY (PostID)
        REFERENCES Post(PostID)
            ON DELETE CASCADE 
            ON UPDATE CASCADE, 
    CONSTRAINT Followup_FK_User FOREIGN KEY (UserID) 
        REFERENCES User(UserID)
            ON DELETE CASCADE
            ON UPDATE CASCADE
); 

CREATE TABLE ReplyPost(
    ReplyID INT NOT NULL AUTO_INCREMENT, 
    Text VARCHAR(500), 
    UserID INT NOT NULL,
    PostID INT NOT NULL, 
    CONSTRAINT ReplyPost_PK PRIMARY KEY (ReplyID),
    CONSTRAINT ReplyPost_FK_User FOREIGN KEY (UserID)
        REFERENCES User(UserID)
            ON DELETE CASCADE 
            ON UPDATE CASCADE, 
    CONSTRAINT ReplyPost_FK_Post FOREIGN KEY (PostID)
        REFERENCES Post(PostID)
            ON DELETE CASCADE 
            ON UPDATE CASCADE
);

CREATE TABLE ReplyFollowup(
    ReplyID INT AUTO_INCREMENT, 
    Text VARCHAR(500), 
    UserID INT NOT NULL,
    PostID INT NOT NULL,
    FollowupID INT NOT NULL, 
    CONSTRAINT ReplyFollowup_PK PRIMARY KEY (ReplyID),
    CONSTRAINT ReplyFollowup_FK_User FOREIGN KEY (UserID)
        REFERENCES User(UserID)
            ON DELETE CASCADE 
            ON UPDATE CASCADE, 
    CONSTRAINT ReplyFollowup_FK_Followup FOREIGN KEY (PostID, FollowupID)
        REFERENCES Followup(PostID, FollowupID)
            ON DELETE CASCADE 
            ON UPDATE CASCADE
);

CREATE TABLE UserInCourse(
    UserID INT, 
    CourseID CHAR(7),
    CONSTRAINT UserInCourse_PK PRIMARY KEY (UserID, CourseID), 
    CONSTRAINT UserInCourse_FK_User FOREIGN KEY (UserID) 
        REFERENCES User(UserID)
            ON DELETE CASCADE 
            ON UPDATE CASCADE, 
    CONSTRAINT UserInCourse_FK_Course FOREIGN KEY (CourseID) 
        REFERENCES Course(CourseID)
            ON DELETE CASCADE
            ON UPDATE CASCADE
);

CREATE TABLE LikedBy(
    UserID INT, 
    PostID INT, 
    CONSTRAINT LikedBy_PK PRIMARY KEY (UserID, PostID), 
    CONSTRAINT LikedBy_FK_User FOREIGN KEY (UserID) 
        REFERENCES User(UserID)
            ON DELETE CASCADE 
            ON UPDATE CASCADE, 
    CONSTRAINT LikedBy_FK_Post FOREIGN KEY (PostID) 
        REFERENCES Post(PostID)
            ON DELETE CASCADE
            ON UPDATE CASCADE
);

CREATE TABLE ViewedBy(
    UserID INT, 
    PostID INT, 
    CONSTRAINT ViewedBy_PK PRIMARY KEY (UserID, PostID), 
    CONSTRAINT ViewedBy_FK_User FOREIGN KEY (UserID) 
        REFERENCES User(UserID)
            ON DELETE CASCADE 
            ON UPDATE CASCADE, 
    CONSTRAINT ViewedBy_FK_Post FOREIGN KEY (PostID) 
        REFERENCES Post(PostID)
            ON DELETE CASCADE
            ON UPDATE CASCADE
);

CREATE TABLE FolderInCourse(
    FolderID INT, 
    CourseID CHAR(7), 
    CONSTRAINT FolderInCourse_PK PRIMARY KEY (FolderID, CourseID), 
    CONSTRAINT FolderInCourse_FK_Folder FOREIGN KEY (FolderID)
        REFERENCES Folder(FolderID)
            ON DELETE CASCADE
            ON UPDATE CASCADE, 
    CONSTRAINT FolderInCourse_FK_Course FOREIGN KEY (CourseID)
        REFERENCES Course(CourseID)
            ON DELETE CASCADE
            ON UPDATE CASCADE
);