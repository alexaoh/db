-- Authors: Alexander Ohrt, Martin Olderskog, Jim Totland - DB2

-- Three top lines added in order to make our testing a bit more effective. 
DROP DATABASE Piattsa;
CREATE SCHEMA Piattsa;
USE Piattsa;

CREATE TABLE User(
    UserID INT, 
    Fname VARCHAR(30),
    Sname VARCHAR(30),
    Email VARCHAR(50) UNIQUE, 
    UserPassword VARCHAR(50), 
    UserType VARCHAR(10), 
    CONSTRAINT User_PK PRIMARY KEY (UserID)
);

CREATE TABLE ActiveOnDate(
    UserID INT, 
    Dated DATE, 
    CONSTRAINT ActiveOnDate_PK PRIMARY KEY (UserID, Dated), 
    CONSTRAINT ActiveOnDate_FK_User FOREIGN KEY (UserID) 
        REFERENCES User(UserID)
            ON DELETE CASCADE
            ON UPDATE CASCADE
);

CREATE TABLE Course(
    CourseID CHAR(7), 
    Name VARCHAR(30), 
    Term VARCHAR(6),
    AllowAnonymous BOOL, 
    CONSTRAINT Course_PK PRIMARY KEY (CourseID)
);

CREATE TABLE Folder(
    FolderID INT AUTO_INCREMENT, 
    Name VARCHAR(30), 
    SuperFolder INT, 
    CONSTRAINT Folder_PK PRIMARY KEY (FolderID), 
    CONSTRAINT Folder_FK_Super FOREIGN KEY (SuperFolder) 
        REFERENCES Folder(FolderID)
            ON DELETE CASCADE 
            ON UPDATE CASCADE
);

CREATE TABLE Post(
    PostID INT AUTO_INCREMENT,
    Text VARCHAR(500),
    Summary VARCHAR(50), 
    ColorCode VARCHAR(10), 
    Tag VARCHAR(20), 
    FolderID INT NOT NULL, 
    UserID INT NOT NULL,
    CONSTRAINT Post_PK PRIMARY KEY (PostID),
    CONSTRAINT Post_FK_Folder FOREIGN KEY (FolderID) 
        REFERENCES Folder(FolderID)
            ON DELETE CASCADE 
            ON UPDATE CASCADE,
    CONSTRAINT Post_FK_User FOREIGN KEY (UserID) 
        REFERENCES User(UserID)
            ON DELETE CASCADE
            ON UPDATE CASCADE
);

CREATE TABLE Followup(
    PostID INT,  
    FollowupID INT, 
    Text VARCHAR(500), 
    UserID INT NOT NULL, 
    CONSTRAINT Followup_PK PRIMARY KEY (PostID, FollowupID),
    CONSTRAINT Followup_FK_Post FOREIGN KEY (PostID)
        REFERENCES Post(PostID)
            ON DELETE CASCADE 
            ON UPDATE CASCADE, 
    CONSTRAINT Followup_FK_User FOREIGN KEY (UserID) 
        REFERENCES User(UserID)
            ON DELETE CASCADE
            ON UPDATE CASCADE
); 

CREATE TABLE ReplyPost(
    ReplyID INT NOT NULL AUTO_INCREMENT, 
    Text VARCHAR(500), 
    UserID INT NOT NULL,
    PostID INT NOT NULL, 
    CONSTRAINT ReplyPost_PK PRIMARY KEY (ReplyID),
    CONSTRAINT ReplyPost_FK_User FOREIGN KEY (UserID)
        REFERENCES User(UserID)
            ON DELETE CASCADE 
            ON UPDATE CASCADE, 
    CONSTRAINT ReplyPost_FK_Post FOREIGN KEY (PostID)
        REFERENCES Post(PostID)
            ON DELETE CASCADE 
            ON UPDATE CASCADE
);

CREATE TABLE ReplyFollowup(
    ReplyID INT AUTO_INCREMENT, 
    Text VARCHAR(500), 
    UserID INT NOT NULL,
    PostID INT NOT NULL,
    FollowupID INT NOT NULL, 
    CONSTRAINT ReplyFollowup_PK PRIMARY KEY (ReplyID),
    CONSTRAINT ReplyFollowup_FK_User FOREIGN KEY (UserID)
        REFERENCES User(UserID)
            ON DELETE CASCADE 
            ON UPDATE CASCADE, 
    CONSTRAINT ReplyFollowup_FK_Followup FOREIGN KEY (PostID, FollowupID)
        REFERENCES Followup(PostID, FollowupID)
            ON DELETE CASCADE 
            ON UPDATE CASCADE
);

CREATE TABLE UserInCourse(
    UserID INT, 
    CourseID CHAR(7),
    CONSTRAINT UserInCourse_PK PRIMARY KEY (UserID, CourseID), 
    CONSTRAINT UserInCourse_FK_User FOREIGN KEY (UserID) 
        REFERENCES User(UserID)
            ON DELETE CASCADE 
            ON UPDATE CASCADE, 
    CONSTRAINT UserInCourse_FK_Course FOREIGN KEY (CourseID) 
        REFERENCES Course(CourseID)
            ON DELETE CASCADE
            ON UPDATE CASCADE
);

CREATE TABLE LikedBy(
    UserID INT, 
    PostID INT, 
    CONSTRAINT LikedBy_PK PRIMARY KEY (UserID, PostID), 
    CONSTRAINT LikedBy_FK_User FOREIGN KEY (UserID) 
        REFERENCES User(UserID)
            ON DELETE CASCADE 
            ON UPDATE CASCADE, 
    CONSTRAINT LikedBy_FK_Post FOREIGN KEY (PostID) 
        REFERENCES Post(PostID)
            ON DELETE CASCADE
            ON UPDATE CASCADE
);

CREATE TABLE ViewedBy(
    UserID INT, 
    PostID INT, 
    CONSTRAINT ViewedBy_PK PRIMARY KEY (UserID, PostID), 
    CONSTRAINT ViewedBy_FK_User FOREIGN KEY (UserID) 
        REFERENCES User(UserID)
            ON DELETE CASCADE 
            ON UPDATE CASCADE, 
    CONSTRAINT ViewedBy_FK_Post FOREIGN KEY (PostID) 
        REFERENCES Post(PostID)
            ON DELETE CASCADE
            ON UPDATE CASCADE
);

CREATE TABLE FolderInCourse(
    FolderID INT, 
    CourseID CHAR(7), 
    CONSTRAINT FolderInCourse_PK PRIMARY KEY (FolderID, CourseID), 
    CONSTRAINT FolderInCourse_FK_Folder FOREIGN KEY (FolderID)
        REFERENCES Folder(FolderID)
            ON DELETE CASCADE
            ON UPDATE CASCADE, 
    CONSTRAINT FolderInCourse_FK_Course FOREIGN KEY (CourseID)
        REFERENCES Course(CourseID)
            ON DELETE CASCADE
            ON UPDATE CASCADE
);

-- Example data follows.

INSERT INTO User
VALUES (1, "Peter", "Pan", "peter@pan.com", "123456", "student"), 
       (2, "Ola", "Nordmann", "ola@nordmann.com", "heisann sveisann", "instructor"), 
       (3, "Tiffany", "Johnson", "tiff@john.com", "12345", "student"), 
       (4, "Mister", "Miyagi", "miyagi@me.you", "I am you and he is me", "instructor"), 
       (5, "Chris", "Tucker", "rush@hour.com", "I love China", "instructor"), 
       (6, "Kari", "Nordmann", "kari@nordmann.no", "hade på badet", "instructor");


INSERT INTO Folder(Name, SuperFolder)
VALUES ("Exam", NULL), ("Problem Sets", NULL), ("Lectures", NULL);

INSERT INTO Post(Text, Summary, ColorCode, Tag, FolderID, UserID)
VALUES ("Example post 1 about exam. WAL keyword is contained here", "Example Post 1", "red", "question", 1, 1), 
       ("Example post 2 about lectures. WAL keyword is (not ;)) contained here", "Example Post 2", "red", "homework", 1, 2),
       ("Example post 3 about breaks. No keyWALwords here.", "Example WALPost 3", "red", "question", 1, 3),
       ("Example post 4 about nothing. No keyword is contained here", "Example Post 4", "red", "announcement", 1, 5), 
       ("Example post 5 about nothing. No keyword is contained here", "Example Post 5", "red", "announcement", 1, 5);

INSERT INTO Followup
VALUES (3, 1, "First WALfollowup for testing!", 1), (2, 2, "Second followup for testing!", 2);

INSERT INTO ReplyPost(Text, UserID, PostID)
VALUES ("Heisann, ingenting i dette replyet", 1, 2), ("WALL finnes her altså", 2, 3), ("Finnes ikke her", 2, 1);

INSERT INTO ReplyFollowup(Text, UserID, PostID, FollowupId)
VALUES ("Her er det en WALaltså", 1, 2, 2);

INSERT INTO ViewedBy
VALUES (1, 1), (1, 2), (5, 1), (5, 3), (5, 2), (1, 5), (1, 4);

INSERT INTO Course
VALUES ("TDT4145", "Databases and DBMSs", "Spring", True),
       ("TDT4120", "Algorithms and Data Structures", "Fall", False),
       ("TMA4245", "Statistics", "Spring", True),
       ("TDT4180", "Human Computer Interaction", "Spring", False);
       
INSERT INTO UserInCourse VALUES (1, 'TDT4145'), (2, 'TDT4145'), (3, 'TDT4145'), (4, 'TDT4145'), (5, 'TDT4145'),
								(6, 'TDT4145');
                                
INSERT INTO FolderInCourse VALUES (1,'TDT4145'), (2, 'TDT4145'), (3, 'TDT4145');
       